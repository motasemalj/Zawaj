rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    function isParticipant(participantIds) {
      return isAuthenticated() && request.auth.uid in participantIds;
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own profile and profiles of their conversation partners
      allow read: if isAuthenticated();
      
      // Users can only update their own profile
      allow write: if isUser(userId);
    }
    
    // Conversations collection
    match /conversations/{conversationId} {
      // Only conversation participants can read
      allow read: if isAuthenticated() && 
                     request.auth.uid in resource.data.participantIds;
      
      // Only conversation participants can create/update conversations
      allow create: if isAuthenticated() && 
                       request.auth.uid in request.resource.data.participantIds;
      
      allow update: if isAuthenticated() && 
                       request.auth.uid in resource.data.participantIds;
      
      // Only conversation participants can delete
      allow delete: if isAuthenticated() && 
                       request.auth.uid in resource.data.participantIds;
      
      // Messages subcollection
      match /messages/{messageId} {
        // Only conversation participants can read messages
        allow read: if isAuthenticated() && 
                       request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        
        // Only authenticated users who are participants can create messages
        allow create: if isAuthenticated() && 
                         request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds &&
                         request.auth.uid == request.resource.data.senderId;
        
        // Users can update messages to mark as read
        allow update: if isAuthenticated() && 
                         request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participantIds;
        
        // Messages cannot be deleted individually (only through conversation deletion)
        allow delete: if false;
      }
    }
  }
}

